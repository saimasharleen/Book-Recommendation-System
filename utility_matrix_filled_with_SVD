import pandas as pd
from faker import Faker
import random
from surprise import Reader, Dataset, SVD

#create an instance of the faker generator
fake = Faker()

#create a list to store the generated data
data = []
# generate data for 80000 users
for _ in range(80000):
    user_id = fake.random_int(min=1, max=80000)
    query_id = fake.random_int(min=1, max=1000)
    rating = None if random.random() < 0.2 else fake.random_int(min=1, max=100)
    data.append({'userId': user_id, 'queryId': query_id, 'rating': rating})
#convert the list to a dataframe
df = pd.DataFrame(data)

#drop duplicate entries
df = df.drop_duplicates(subset=['userId', 'queryId'])

#save the dataframe to a csv file
df.to_csv("fake_data_missing_ratings.csv", index=False)

#load the data from csv file
df = pd.read_csv("fake_data_missing_ratings.csv")

#define the reader
reader = Reader(rating_scale=(1, 100))

#load the data from the dataframe
data = Dataset.load_from_df(df[['userId', 'queryId', 'rating']], reader)

#get the whole dataset as a train_set
train_set = data.build_full_trainset()

#define the matrix factorization algorithm
algo = SVD()

#train the algorithm on the training set
algo.fit(train_set)

#predict the missing ratings and fill the utility matrix
matrix = pd.DataFrame(df.pivot(index='userId', columns='queryId', values='rating').fillna(0))
for user in matrix.index:
    for query in matrix.columns:
        if matrix.loc[user, query] == 0:
            matrix.loc[user, query] = algo.predict(user, query).est

# save the matrix to a csv file
matrix.to_csv("utility_matrix_with_predictions.csv")
